<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1254.v3f64639b_11dd">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2118.v31fd5b_9944b_5"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2118.v31fd5b_9944b_5">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3583.v4f58de0d78d5">
    <script>pipeline {
    agent any

    stages {
        stage(&apos;Dependencies&apos;) {
            steps {
                    git(
                      url: &apos;https://github.com/InzynieriaOprogramowaniaAGH/MDO2023.git&apos;,
                      credentialsId: &apos;jenkins-user-github&apos;,
                      branch: &apos;SG287586&apos;
                    )

                    sh &apos;&apos;&apos;docker build -f &quot;GCL1/SG287586/LAB3/Dockerfile.dependencies&quot; -t dependencies .&apos;&apos;&apos;
            }
        }

        stage(&apos;Build&apos;) {
            steps {
                sh &apos;&apos;&apos;docker build -f &quot;GCL1/SG287586/LAB3/Dockerfile.builder&quot; -t builder .&apos;&apos;&apos;
            }
        }

        stage(&apos;Test&apos;) {
            steps {
                sh &apos;&apos;&apos;docker build -f &quot;GCL1/SG287586/LAB3/Dockerfile.tester&quot; -t tester .&apos;&apos;&apos;
            }
        }

        stage(&apos;Deploy&apos;) {
            steps {
                sh &quot;&quot;&quot;
                    docker run --name sample builder
                    docker cp sample:/home/sebastian/sqlite/bld/sqlite3 /tmp
                    docker rm -f sample
                &quot;&quot;&quot;

                sh &quot;&quot;&quot;
                    docker run -d --name=deployer --tty ubuntu:latest
                    docker exec deployer mkdir /app
                    docker cp /tmp/sqlite3 deployer:/app
                    docker exec deployer /app/sqlite3
                    rm /tmp/sqlite3
                &quot;&quot;&quot;
            }
        }

        stage(&apos;Publish&apos;) {
            steps {
                sh &apos;docker commit deployer objdumpr/devops-classes:sqlitev1&apos;
                withCredentials([usernamePassword(credentialsId: &apos;dockerhub&apos;, passwordVariable: &apos;dockerhubPassword&apos;, usernameVariable: &apos;dockerhubUser&apos;)]) {
                    sh &quot;docker login -u ${env.dockerhubUser} -p ${env.dockerhubPassword}&quot;
                sh &apos;docker push objdumpr/devops-classes:sqlitev1&apos;
                }
            }
            post {
                always {
                    sh &apos;docker logout&apos;
                }
            }
        }

    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>