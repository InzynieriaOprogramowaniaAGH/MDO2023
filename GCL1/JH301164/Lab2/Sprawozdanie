ZESTAWIENIE ŚRODOWISKA:

1. Zainstaluj docker w systemie linuxowym
sudo apt install docker.io

2. Pobierz obrazy hello-world, busybox, ubuntu lub fedore, mysql
sudo docker pull busybox

3. Uruchom busybox, pokaż efekt uruchomienia kontenera, podłącz się do kontenera interaktywnie i wywołaj numer wersji

sudo docker run -it busybox
screen (Uruchamianie busybox)

4. Uruchom "system w kontenerze" zaprezentuj PID1 w kontenerze i procesy dockera na hoście, zaktualizuj pakiety, wyjdź

screen (Uruchomienie obrazu na dockerze oraz aktualizacja pakietów)

5. Pokaż uruchomione (!= działające) kontenery, wyczyść je (tutaj zamiast wywoływania docker rm z nazwą obrazów po kolei połączyłem to z kolejnym punktem "wyczyść obrazy" i uruchomiłem docker prune -a

screen (Sprawdzenie jakie kontenery działają oraz czyszczenie

BUDOWANIE PROGRAMU:
1.Znajdź projekt umożliwiający łatwe wywołanie testów jednostokowych, przeprowadź budowę środowiska, uruchom testy.

Znalazłem taki program mam nadzieję że dobry:
https://github.com/dndanoff/spring-boot-unit-integration-test-example
Dodatkowo zainstalowałem maven.
Następnie wykonałem testy za pomocą komendy maven test
screen (Uruchamianie testów)

2.Ponów ten proces w kontenerze. Wybrałem ubuntu jako bazowy system, zainstalowałem potrzebne oprogramowanie, sklonowałem aplikacje z gita, uruchomiłem aplikacje i testy

screen (Testy w kontenerze)

3.Utwórz Dockerfile wykonujący powyższe kroki i zaprezentuj jego działanie, tylko budowanie bez testów

screen (Dockerfile)
screen (Dockerfile tylko budowanie bez testów)

Po uruchomieniu docker ps -a nie widać tego kontenera pomimo, że wykonał swoją pracę ponieważ build jedynie tworzy obraz, jak chce uruchomić kontener na bazie tego obrazu musze wykonać docker run

4. Stwórz drugi Dockerfile na bazie pierwszego który dodatkowo wykona testy. Aby to zrobić używam pierwszego obrazu i podaje go w dockerfile, dodaje jedynie wykonanie testów

screen (Dockerfiletest)
screen (uruchamianie testów z wykorzystaniem poprzedniego dockerfile)

komenda sudo docker build . --tag maventest

RUNDA BONUSOWA

1. Instalowanie docker-compose

screen (Instalowanie docker compose)

2. Tworze plik .yml i odpalam docker-compose

screen (Tworze plik .yml i wykonuje docker compose)
